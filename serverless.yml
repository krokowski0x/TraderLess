service: Traderless

frameworkVersion: ">=1.21.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  serverless-offline:
    port: 4000
  webpackIncludeModules: true
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: Users
            sources: [seed-data/Users.json]

functions:
  graphql:
    handler: handler.graphqlHandler
    role: ServiceRole
    events:
    - http:
        path: graphql
        method: post
        cors: true
    - http:
        path: graphql
        method: get

resources:
  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          - AttributeName: handle
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: handle
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: 'Users'
    TransactionsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - 
            AttributeName: id
            AttributeType: S
          - 
            AttributeName: handle
            AttributeType: S
          - 
            AttributeName: amount
            AttributeType: N
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: 'Transactions'
        GlobalSecondaryIndexes:
          -
            IndexName: transaction-index
            KeySchema:
              -
                AttributeName: handle
                KeyType: HASH
              -
                AttributeName: amount
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 50
              WriteCapacityUnits: 50
    StocksTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - 
            AttributeName: id
            AttributeType: S
          - 
            AttributeName: handle
            AttributeType: S
          - 
            AttributeName: price
            AttributeType: N
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: 'Stocks'
        GlobalSecondaryIndexes:
          -
            IndexName: stock-index
            KeySchema:
              -
                AttributeName: handle
                KeyType: HASH
              -
                AttributeName: price
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 50
              WriteCapacityUnits: 50